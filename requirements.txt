# Project Structure
components:
  Layout:
    - 'Header.tsx'
    - 'Footer.tsx'
    - 'Sidebar.tsx'
  Novel:
    - 'PlotManager.tsx'
    - 'CharacterManager.tsx'
    - 'WorldBuildingManager.tsx'
    - 'ChapterManager.tsx'
    - 'TimelineManager.tsx'
    - 'ThemeManager.tsx'
    - 'NotesManager.tsx'
    - 'DialogueManager.tsx'
    - 'ConsistencyManager.tsx'
    - 'ScheduleManager.tsx'
  Common:
    - 'Button.tsx'
    - 'Input.tsx'
    - 'Loading.tsx'
    - 'MarkdownEditor.tsx'
    - 'FileUploader.tsx'
    - 'Timeline.tsx'
    - 'Calendar.tsx'

pages:
  - 'index.tsx'
  - 'dashboard/index.tsx'
  - 'plot/index.tsx'
  - 'characters/index.tsx'
  - 'world-building/index.tsx'
  - 'chapters/[id].tsx'
  - 'timeline/index.tsx'
  - 'themes/index.tsx'
  - 'notes/index.tsx'
  - 'dialogue/index.tsx'
  - 'consistency/index.tsx'
  - 'schedule/index.tsx'
  - 'api/novel.ts'

dependencies:
  next: '^13.0.0'
  react: '^18.2.0'
  react-dom: '^18.2.0'
  axios: '^1.3.0'
  '@mui/material': '^5.0.0'
  '@emotion/react': '^11.0.0'
  '@emotion/styled': '^11.0.0'
  'swr': '^2.0.0'
  'marked': '^4.0.0'
  'react-markdown': '^8.0.0'
  'yaml': '^2.0.0'
  'date-fns': '^2.29.0'
  '@monaco-editor/react': '^4.4.0'
  'react-beautiful-dnd': '^13.1.0'

devDependencies:
  typescript: '^4.9.0'
  jest: '^29.0.0'
  '@testing-library/react': '^13.0.0'
  '@testing-library/jest-dom': '^5.16.0'
  cypress: '^12.0.0'
  eslint: '^8.0.0'
  prettier: '^2.8.0'
  '@types/node': '^18.0.0'
  '@types/react': '^18.0.0'

testing:
  directories:
    - '__tests__/components/'
    - '__tests__/pages/'
    - 'cypress/integration/'

ci_cd:
  name: 'NovelSpec CI/CD Pipeline'
  on: ['push', 'pull_request']
  jobs:
    build:
      runs-on: 'ubuntu-latest'
      steps:
        - uses: 'actions/checkout@v2'
        - name: 'Setup Node.js'
          uses: 'actions/setup-node@v2'
        - name: 'Install dependencies'
          run: 'yarn install'
        - name: 'Run tests'
          run: 'yarn test'
        - name: 'Build'
          run: 'yarn build'

environment:
  development:
    NODE_ENV: 'development'
    API_URL: 'http://localhost:8000'
    WS_URL: 'ws://localhost:8000/ws'
  production:
    NODE_ENV: 'production'
    API_URL: 'https://api.novelspec.com'
    WS_URL: 'wss://api.novelspec.com/ws'

docker:
  base_image: 'node:16-alpine'
  workdir: '/app'
  commands:
    - 'COPY package.json yarn.lock ./'
    - 'RUN yarn install --frozen-lockfile'
    - 'COPY . .'
    - 'RUN yarn build'
    - 'CMD ["yarn", "start"]'

database:
  type: 'PostgreSQL'
  version: '14'
  schemas:
    - 'plots'
    - 'characters'
    - 'world_building'
    - 'chapters'
    - 'timelines'
    - 'themes'
    - 'notes'
    - 'dialogues'
    - 'consistency_checks'
    - 'schedules'